<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd
                        http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">

    <context:component-scan base-package="kr.or.connect.reservation.service" />

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <context:property-placeholder location="classpath:application.properties" system-properties-mode="OVERRIDE"/>
	
	<!-- Enables scanning for @Transactional annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- DataSource Configuration for the connection pool-->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<!-- JDBC Profile -->
    <beans profile="jdbc">
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <context:component-scan base-package="kr.or.connect.reservation.repository.jdbc"/>
    </beans>
	<!-- MyBatis Profile -->
	<beans profile="mybatis">
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        	<constructor-arg ref="dataSource" />
    	</bean>
    	
   	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	        <property name="dataSource" ref="dataSource" />
	        <property name="configLocation" value="classpath:/mybatis-config.xml" />
			<property name="mapperLocations" value="classpath:/mapper/*.xml" />
    	</bean>
    	
	    <bean id="sqlSessiontemplate" class="org.mybatis.spring.SqlSessionTemplate">
	        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	    </bean>
	    
	    <mybatis-spring:scan base-package="kr.or.connect.reservation.repository.mybatis.mapper"/>
	    <context:component-scan base-package="kr.or.connect.reservation.repository.mybatis"/>
	</beans>

</beans>